INHERIT += "report-error"
DISTRO = "poky"
PACKAGE_CLASSES = "package_ipk"
BB_NUMBER_THREADS = "${@bb.utils.cpu_count()}"
PARALLEL_MAKE = "-j ${@bb.utils.cpu_count()}"
SDKMACHINE ?= "x86_64"
IMAGE_FSTYPES_append = "  tar.gz"
BB_TASK_NICE_LEVEL = "5"
BB_TASK_NICE_LEVEL_task-testimage = "0"
BB_TASK_IONICE_LEVEL = "2.7"
BB_TASK_IONICE_LEVEL_task-testimage = "2.1"
DL_DIR = "/tmp/yocto-autobuilder/downloads"
SSTATE_DIR ?= "/tmp/yocto-autobuilder/sstate/" 
MACHINE = "imx6q-phytec-mira-rdk-nand"
PREMIRRORS = ""
ERROR_QA_remove = "version-going-backwards"
PRSERV_HOST = "localhost:0:0"
ADTREPO = "http://adtrepo.yoctoproject.org//2.6"
QEMU_USE_KVM = "True"

PRSERV_HOST = "localhost:0"
INHERIT += "own-mirrors"
SOURCE_MIRROR_URL = "http://mirror/source_mirror_thud"
SSTATE_MIRRORS ?= "file://.* http://mirror/sstate_mirror_thud/PATH;downloadfilename=PATH"

# attempt with grub:
#MENDER_FEATURES_ENABLE_append = " mender-image-sd"
#MENDER_FEATURES_DISABLE_append = " mender-image-uefi"

# no grub/uefi:
MENDER_FEATURES_ENABLE_append = " mender-uboot mender-image-sd"
MENDER_FEATURES_DISABLE_append = " mender-grub mender-image-uefi"

# set the serial console(s) passed from U-Boot to kernel commandline:
MENDER_UBOOT_PRE_SETUP_COMMANDS = "mmc rescan; setenv console ttymxc1,115200n8; console_bootargs=console=\$\{console}; setenv bootargs \$\{console_bootargs} \$\{bootargs}; setenv fdt_high 0xffffffff; setenv fdt_addr_r 0x18000000; setenv kernel_addr_r 0x12000000"

# don't use vfat partition for MLO
MENDER_IMAGE_BOOTLOADER_FILE = "SPL"
# this sets the offset where the bootloader should be placed, 
# .counting from the start of the storage medium. 
# The offset is specified in units of 512-byte sectors. 
# Obviously this needs to be non-zero, or the partition table itself would be overwritten.
# something like this should work:
# sudo dd if=./u-boot/SPL of=${DISK} seek=1 bs=1k
# -- bs=BYTES
#              read and write up to BYTES bytes at a time (default: 512);
#              overrides ibs and obs
#    
#    K =1024
#
#       count=N
#              copy only N input blocks
#
#       seek=N skip N obs-sized blocks at start of output
#
#    seek defines the offset, so I would say
#    start at 1 KBytes (1*1024)
# we want an offset of 1K (0x400) -> 0x400 / 0x200 = 0x2 i.e. 2
MENDER_IMAGE_BOOTLOADER_BOOTSECTOR_OFFSET = "2"

# don't use vfat partition for u-boot.img
MENDER_IMAGE_SECOND_BOOTLOADER_FILE = "u-boot.img"

# this sets the offset where the bootloader should be placed, 
# .counting from the start of the storage medium. 
# The offset is specified in units of 512-byte sectors. 
# Obviously this needs to be non-zero, or the partition table itself would be overwritten.
# something like this should work:
# sudo dd if=./u-boot/u-boot.img of=${DISK} seek=69 bs=1k
# -- bs=BYTES
#              read and write up to BYTES bytes at a time (default: 512);
#              overrides ibs and obs
#    
#    K =1024
#
#       count=N
#              copy only N input blocks
#
#       seek=N skip N obs-sized blocks at start of output
#
#    seek defines the offset, so I would say
#    start at 69 KBytes (69*1024)
# we want an offset of 69K (0x11400) -> 0x11400 / 0x200 = 0x8A i.e. 138
MENDER_IMAGE_SECOND_BOOTLOADER_BOOTSECTOR_OFFSET = "138"

# files which should not be in vfat /uboot partition
MENDER_IMAGE_BOOT_FILES_REMOVE="${IMAGE_BOOT_FILES}"
